name: Build & Push Docker images

on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'           # backend Dockerfile
      - 'Dockerfile.frontend'  # frontend Dockerfile
      - 'backend.py'
      - 'frontend.py'
      - 'ai_agent.py'
      - 'requirements.txt'
      - 'requirements-frontend.txt'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch: {}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN:    ${{ secrets.DOCKERHUB_TOKEN }}
      BACKEND_IMAGE:      bhaskar4297/ai-agent-backend
      FRONTEND_IMAGE:     bhaskar4297/ai-agent-frontend
      SHA_TAG:            sha-${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- Backend image ---
      - name: Build & push backend (latest + sha)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.BACKEND_IMAGE }}:latest
            ${{ env.BACKEND_IMAGE }}:${{ env.SHA_TAG }}
          cache-from: type=registry,ref=${{ env.BACKEND_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.BACKEND_IMAGE }}:buildcache,mode=max

      # --- Frontend image ---
      - name: Build & push frontend (latest + sha)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.frontend
          push: true
          tags: |
            ${{ env.FRONTEND_IMAGE }}:latest
            ${{ env.FRONTEND_IMAGE }}:${{ env.SHA_TAG }}
          cache-from: type=registry,ref=${{ env.FRONTEND_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.FRONTEND_IMAGE }}:buildcache,mode=max
